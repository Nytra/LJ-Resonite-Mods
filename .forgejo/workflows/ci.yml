# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build & Test

on:
  tag:
    - 'v.*'
  push:
  pull_request:

env:
  ResonitePath: "${{ github.workspace }}/Resonite"

jobs:
  build-MonkeyLoader:
    runs-on: ubuntu-latest
    steps:
    - name: Fetch repository
      uses: actions/checkout@v4

    - name: Get Resonite Infos
      run: |
        {
          echo "APP_INFO<<EOFEOF"
          curl https://api.steamcmd.net/v1/info/2519830
          echo ""
          echo "EOFEOF"
        } >> "$GITHUB_ENV"

    - name: Get Resonite from Cache
      id: cache-resonite
      uses: actions/cache@v3.3.3
      with:
        path: "${{ env.ResonitePath }}"
        key: "${{ fromJson( env.APP_INFO ).data['2519830'].depots.branches.public.buildid }}"

    - name: Download Steam
      if: steps.cache-resonite.outputs.cache-hit != 'true'
      uses: CyberAndrii/setup-steamcmd@b786e0da44db3d817e66fa3910a9560cb28c9323

    - name: Download Resonite
      if: steps.cache-resonite.outputs.cache-hit != 'true'
      run: |
        steamcmd '+@sSteamCmdForcePlatformType windows' '+force_install_dir "${{ env.ResonitePath }}"' '+login "${{ secrets.STEAM_USER }}" "${{ secrets.STEAM_TOKEN }}"' '+app_license_request 2519830' '+app_update 2519830 validate' '+quit'
        #The following line makes the cache much much smaller:
        rm -r '${{ env.ResonitePath }}/RuntimeData/PreCache'

    - name: Fetch MonkeyLoader
      uses: robinraju/release-downloader@1.9
      if: steps.cache-resonite.outputs.cache-hit != 'true'
      with:
        repository: ResoniteModdingGroup/MonkeyLoader.GamePacks.Resonite
        fileName: "MonkeyLoader*.zip"
        out-file-path: MonkeyLoader/
        github-api-url: "https://api.github.com"

    - name: Move MonkeyLoader files
      if: steps.cache-resonite.outputs.cache-hit != 'true'
      run: |
        mkdir -p "$ResonitePath/MonkeyLoader/GamePacks"
        mkdir -p "$ResonitePath/MonkeyLoader/Mods"
        unzip -o "${{ github.workspace }}/MonkeyLoader/MonkeyLoader*.zip" -d "$ResonitePath"

    # TODO: Reference assemblies

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Check formatting
      run: dotnet format --no-restore --verify-no-changes

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-restore

    - name: Build release
      if: ${{ github.event_name = 'tag' }}
      run: dotnet build --no-restore --configuration Release

    - name: Upload build artifacts
      if: ${{ github.event_name = 'tag' }}
      uses: ncipollo/release-action@v1
      with: 
        allowUpdates: true
        updateOnlyUnreleased: true
        generateReleaseNotes: true
        omitBodyDuringUpdate: true
        omitDraftDuringUpdate: true
        omitNameDuringUpdate: true
        omitPrereleaseDuringUpdate: true
        replacesArtifacts: true
        draft: true
        makeLatest: true
        tag: "${{ github.ref }}"
        artifacts: "bin/Release/*.nupkg"
